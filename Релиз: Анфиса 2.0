Фронтенд-разработчики подготовили шаблон страницы с веб-формой: 
из неё пользователи будут отправлять запросы к Анфисе. Сейчас вы напишете обработку запросов.

Сначала внимательно посмотрите на шаблон index.html. Там много нового.

<form action={{ where }} method="post">
Эта строка создаёт веб-форму с опредёленными атрибутами.
Атрибут method со значением post интуитивно понятен: он требует от браузера отправлять данные из этой формы методом POST.
Атрибут action сообщает браузеру, на какой адрес следует отправить данные из формы. 
Здесь в action подставляется значение переменной where — в ней передаётся головной адрес вашего сервера.
Поле для ввода текста имеет атрибут name со значением query:

<input type="text" name="query">

Это вам уже знакомо: на сервер уйдёт POST-запрос, а в нём будет
{
    query: "то, что пользователь ввёл в поле ввода"
}

Ещё в шаблоне страницы вам встретится следующая конструкция:
{{ response | safe }}

Вы уже знаете, что в шаблоне Django в двойных фигурных скобках выводятся значения элементов из словаря context. 
Таким образом, запись {{ response | safe }} вам частично знакома: из словаря context выводится значение по ключу response.
Но что такое safe? Внутри фигурных скобок вертикальная черта | отделяет ключ словаря context от опций, 
определяющих формат вывода значения, которое соответствует ключу.
Если не указывать опцию safe, то выводимое значение будет интерпретировано как текст, а не как HTML-код.

Если просто {{ response }}:


Если {{ response | safe }}:


Теперь в шаблоне не осталось тёмных мест и белых пятен. Время кодить.

Алгоритм

→ на главную страницу приходит POST-запрос
→ URL Mapping распознаёт запрошенный URL Path в urls.py и, если он пуст (то есть равен ''), вызывает функцию index()
→ в index() происходит разбор POST-запроса и вызов функции из модуля anfisa
→ отработка выбранной функции в anfisa.py
→ получение из anfisa.py результата и оформление его в HTML-код
→ наполнение словаря context
→ вызов render() и отправка страницы пользователю (той же самой главной страницы, но с добавлением ответа Анфисы).

Ваша работа делится на три этапа:

Дать доступ к главной странице Анфисы по веб-адресу {URL}.

Подключить к файлу views.py библиотеку anfisa.py; 
из библиотеки anfisa.py вызвать нужную функцию для обработки вопроса.
Скомпоновать страницу ответа и отправить её пользователю.
